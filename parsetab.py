
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA DIVIDE EQ GT LBRACE LPAREN LT MINUS NOTEQ PLUS RBRACE RPAREN SEMICOLON TIMES def else id if int num print returnMAIN : STMT\n            | FLIST\n            |FLIST : FDEF FLIST\n             | FDEFFDEF : def id LPAREN PARLIST RPAREN LBRACE STMTLIST RBRACEPARLIST : int id COMMA PARLIST\n               | int idSTMT : int id SEMICOLON\n            | ATRIBST SEMICOLON\n            | PRINTST SEMICOLON\n            | RETURNST SEMICOLON\n            | IFSTMT\n            | LBRACE STMTLIST RBRACE\n            | SEMICOLONATRIBST : id EQ EXPR\n               | id EQ FCALLFCALL : id LPAREN PARLISTCALL RPARENPARLISTCALL : id COMMA PARLISTCALL\n                   | idPRINTST : print EXPRRETURNST : returnIFSTMT : if LPAREN EXPR RPAREN STMT else STMT\n              | if LPAREN EXPR RPAREN STMTSTMTLIST : STMT STMTLIST\n                | STMTEXPR : NUMEXPR LT NUMEXPR\n            | NUMEXPR GT NUMEXPR\n            | NUMEXPR EQ NUMEXPR\n            | NUMEXPRNUMEXPR : NUMEXPR PLUS TERM\n               | NUMEXPR MINUS TERM\n               | TERMTERM : TERM TIMES FACTOR\n            | FACTORFACTOR : num\n              | LPAREN NUMEXPR RPAREN\n              | id'
    
_lr_action_items = {'$end':([0,1,2,3,6,10,12,19,20,21,24,34,38,62,71,74,],[-3,0,-1,-2,-15,-13,-5,-10,-11,-12,-4,-9,-14,-24,-23,-6,]),'int':([0,6,10,11,19,20,21,23,34,38,48,57,62,67,68,69,71,],[4,-15,-13,4,-10,-11,-12,4,-9,-14,59,4,-24,4,4,59,-23,]),'LBRACE':([0,6,10,11,19,20,21,23,34,38,57,62,63,67,68,71,],[11,-15,-13,11,-10,-11,-12,11,-9,-14,11,-24,68,11,11,-23,]),'SEMICOLON':([0,6,7,8,9,10,11,14,17,19,20,21,23,25,26,27,28,29,31,34,35,36,37,38,50,51,52,53,54,55,56,57,62,66,67,68,71,],[6,-15,19,20,21,-13,6,-22,34,-10,-11,-12,6,-21,-30,-33,-35,-36,-38,-9,-38,-16,-17,-14,-27,-28,-29,-31,-32,-34,-37,6,-24,-18,6,6,-23,]),'id':([0,4,6,10,11,13,16,18,19,20,21,23,30,32,34,38,40,41,42,43,44,45,49,57,59,62,65,67,68,71,],[5,17,-15,-13,5,31,33,35,-10,-11,-12,5,31,31,-9,-14,31,31,31,31,31,31,60,5,64,-24,60,5,5,-23,]),'print':([0,6,10,11,19,20,21,23,34,38,57,62,67,68,71,],[13,-15,-13,13,-10,-11,-12,13,-9,-14,13,-24,13,13,-23,]),'return':([0,6,10,11,19,20,21,23,34,38,57,62,67,68,71,],[14,-15,-13,14,-10,-11,-12,14,-9,-14,14,-24,14,14,-23,]),'if':([0,6,10,11,19,20,21,23,34,38,57,62,67,68,71,],[15,-15,-13,15,-10,-11,-12,15,-9,-14,15,-24,15,15,-23,]),'def':([0,12,74,],[16,16,-6,]),'EQ':([5,26,27,28,29,31,35,53,54,55,56,],[18,42,-33,-35,-36,-38,-38,-31,-32,-34,-37,]),'RBRACE':([6,10,19,20,21,22,23,34,38,39,62,71,72,],[-15,-13,-10,-11,-12,38,-26,-9,-14,-25,-24,-23,74,]),'else':([6,10,19,20,21,34,38,62,71,],[-15,-13,-10,-11,-12,-9,-14,67,-23,]),'num':([13,18,30,32,40,41,42,43,44,45,],[29,29,29,29,29,29,29,29,29,29,]),'LPAREN':([13,15,18,30,32,33,35,40,41,42,43,44,45,],[30,32,30,30,30,48,49,30,30,30,30,30,30,]),'LT':([26,27,28,29,31,35,53,54,55,56,],[40,-33,-35,-36,-38,-38,-31,-32,-34,-37,]),'GT':([26,27,28,29,31,35,53,54,55,56,],[41,-33,-35,-36,-38,-38,-31,-32,-34,-37,]),'RPAREN':([26,27,28,29,31,46,47,50,51,52,53,54,55,56,58,60,61,64,70,73,],[-30,-33,-35,-36,-38,56,57,-27,-28,-29,-31,-32,-34,-37,63,-20,66,-8,-19,-7,]),'PLUS':([26,27,28,29,31,35,46,50,51,52,53,54,55,56,],[43,-33,-35,-36,-38,-38,43,43,43,43,-31,-32,-34,-37,]),'MINUS':([26,27,28,29,31,35,46,50,51,52,53,54,55,56,],[44,-33,-35,-36,-38,-38,44,44,44,44,-31,-32,-34,-37,]),'TIMES':([27,28,29,31,35,53,54,55,56,],[45,-35,-36,-38,-38,45,45,-34,-37,]),'COMMA':([60,64,],[65,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'MAIN':([0,],[1,]),'STMT':([0,11,23,57,67,68,],[2,23,23,62,71,23,]),'FLIST':([0,12,],[3,24,]),'ATRIBST':([0,11,23,57,67,68,],[7,7,7,7,7,7,]),'PRINTST':([0,11,23,57,67,68,],[8,8,8,8,8,8,]),'RETURNST':([0,11,23,57,67,68,],[9,9,9,9,9,9,]),'IFSTMT':([0,11,23,57,67,68,],[10,10,10,10,10,10,]),'FDEF':([0,12,],[12,12,]),'STMTLIST':([11,23,68,],[22,39,72,]),'EXPR':([13,18,32,],[25,36,47,]),'NUMEXPR':([13,18,30,32,40,41,42,],[26,26,46,26,50,51,52,]),'TERM':([13,18,30,32,40,41,42,43,44,],[27,27,27,27,27,27,27,53,54,]),'FACTOR':([13,18,30,32,40,41,42,43,44,45,],[28,28,28,28,28,28,28,28,28,55,]),'FCALL':([18,],[37,]),'PARLIST':([48,69,],[58,73,]),'PARLISTCALL':([49,65,],[61,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> MAIN","S'",1,None,None,None),
  ('MAIN -> STMT','MAIN',1,'p_MAIN','analisador.py',75),
  ('MAIN -> FLIST','MAIN',1,'p_MAIN','analisador.py',76),
  ('MAIN -> <empty>','MAIN',0,'p_MAIN','analisador.py',77),
  ('FLIST -> FDEF FLIST','FLIST',2,'p_FLIST','analisador.py',81),
  ('FLIST -> FDEF','FLIST',1,'p_FLIST','analisador.py',82),
  ('FDEF -> def id LPAREN PARLIST RPAREN LBRACE STMTLIST RBRACE','FDEF',8,'p_FDEF','analisador.py',86),
  ('PARLIST -> int id COMMA PARLIST','PARLIST',4,'p_PARLIST','analisador.py',90),
  ('PARLIST -> int id','PARLIST',2,'p_PARLIST','analisador.py',91),
  ('STMT -> int id SEMICOLON','STMT',3,'p_STMT','analisador.py',95),
  ('STMT -> ATRIBST SEMICOLON','STMT',2,'p_STMT','analisador.py',96),
  ('STMT -> PRINTST SEMICOLON','STMT',2,'p_STMT','analisador.py',97),
  ('STMT -> RETURNST SEMICOLON','STMT',2,'p_STMT','analisador.py',98),
  ('STMT -> IFSTMT','STMT',1,'p_STMT','analisador.py',99),
  ('STMT -> LBRACE STMTLIST RBRACE','STMT',3,'p_STMT','analisador.py',100),
  ('STMT -> SEMICOLON','STMT',1,'p_STMT','analisador.py',101),
  ('ATRIBST -> id EQ EXPR','ATRIBST',3,'p_ATRIBST','analisador.py',105),
  ('ATRIBST -> id EQ FCALL','ATRIBST',3,'p_ATRIBST','analisador.py',106),
  ('FCALL -> id LPAREN PARLISTCALL RPAREN','FCALL',4,'p_FCALL','analisador.py',110),
  ('PARLISTCALL -> id COMMA PARLISTCALL','PARLISTCALL',3,'p_PARLISTCALL','analisador.py',114),
  ('PARLISTCALL -> id','PARLISTCALL',1,'p_PARLISTCALL','analisador.py',115),
  ('PRINTST -> print EXPR','PRINTST',2,'p_PRINTST','analisador.py',119),
  ('RETURNST -> return','RETURNST',1,'p_RETURNST','analisador.py',123),
  ('IFSTMT -> if LPAREN EXPR RPAREN STMT else STMT','IFSTMT',7,'p_IFSTMT','analisador.py',127),
  ('IFSTMT -> if LPAREN EXPR RPAREN STMT','IFSTMT',5,'p_IFSTMT','analisador.py',128),
  ('STMTLIST -> STMT STMTLIST','STMTLIST',2,'p_STMTLIST','analisador.py',132),
  ('STMTLIST -> STMT','STMTLIST',1,'p_STMTLIST','analisador.py',133),
  ('EXPR -> NUMEXPR LT NUMEXPR','EXPR',3,'p_EXPR','analisador.py',137),
  ('EXPR -> NUMEXPR GT NUMEXPR','EXPR',3,'p_EXPR','analisador.py',138),
  ('EXPR -> NUMEXPR EQ NUMEXPR','EXPR',3,'p_EXPR','analisador.py',139),
  ('EXPR -> NUMEXPR','EXPR',1,'p_EXPR','analisador.py',140),
  ('NUMEXPR -> NUMEXPR PLUS TERM','NUMEXPR',3,'p_NUMEXPR','analisador.py',144),
  ('NUMEXPR -> NUMEXPR MINUS TERM','NUMEXPR',3,'p_NUMEXPR','analisador.py',145),
  ('NUMEXPR -> TERM','NUMEXPR',1,'p_NUMEXPR','analisador.py',146),
  ('TERM -> TERM TIMES FACTOR','TERM',3,'p_TERM','analisador.py',150),
  ('TERM -> FACTOR','TERM',1,'p_TERM','analisador.py',151),
  ('FACTOR -> num','FACTOR',1,'p_FACTOR','analisador.py',155),
  ('FACTOR -> LPAREN NUMEXPR RPAREN','FACTOR',3,'p_FACTOR','analisador.py',156),
  ('FACTOR -> id','FACTOR',1,'p_FACTOR','analisador.py',157),
]
